opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
}
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
f <- file
content <- readLines(file.path(path_site, dir_rmd, f))
outfile <- file.path(path_site, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
opts_knit$set(root.dir = path_site)
#knit(text = content, output = outfile)
print(outfile)
}
rmd2md(file = "dynamic_twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
f <- file
content <- readLines(file.path(path_site, dir_rmd, f))
outfile <- file.path(path_site, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
print(outfile)
}
rmd2md(file = "dynamic_twopart.Rmd")
?knit
outfile
content <- readLines(file.path(path_site, dir_rmd, f))
outfile <- file.path(path_site, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
rmd2md(file = "twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
f <- file
content <- readLines(file.path(path_site, dir_rmd, f))
outfile <- file.path(path_site, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
print(outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
f
file
file = "dynamic_twopart.Rmd"
f <- file
f
rm(f)
path_stie
path_site
path_site = path.site
dir_rmd = "_rmd"
dir_figs = "figs/"
out_ext='.md'
in_ext='.rmd'
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
content
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
outfile
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
outfile
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
opts_knit$set(root.dir = path_site)
path_site
path_site = path.site
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
file = "dynamic_twopart.Rmd"
path_site = path.site
dir_rmd = "_rmd"
dir_figs = "figs/"
out_ext='.md'
in_ext='.rmd'
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
opts_knit$set(root.dir = path_site)
outfile
content
path_site
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
#opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
print(outfile)
}
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
path_site = path.site
dir_rmd = "_rmd"
dir_figs = "figs/"
out_ext='.md'
in_ext='.rmd'
content <- readLines(file.path(path_site, dir_rmd, file))
dir_rmd
file
file = "dynamic_twopart.Rmd"
file
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
?outfile
outfile
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
#opts_knit$set(root.dir = path_site)
outfile
content
?knit
knit(text = content, output = outfile)
knit(text = content, output = outfile)
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
#opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "dynamic_twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
#opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
#opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "dynamic_twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
#opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "dynamic_twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
path_site = path.site
file = "dynamic_twopart.Rmd"
dir_rmd = "_rmd"
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
files
dir_figs = "figs/"
out_ext='.md'
in_ext='.rmd'
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
content
outfile
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
base.dir
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
#opts_knit$set(root.dir = path_site)
opts_chunk
opts_chunk()
opts_chunk$set()
content
head(content)
content
knit(text = content, output = outfile)
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
#opts_knit$set(root.dir = path_site)
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "dynamic_twopart.Rmd")
getwd()
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site, root.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site, root.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site, root.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site, root.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "dynamic_twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site, root.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
?read_chunk()
rmd2md(file = "twopart.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site, root.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
# convert
rmd2md(file = "twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "dynamic_twopart.Rmd")
rmd2md(file = "twopart.Rmd")
rmd2md(file = "twopart.Rmd")
rmd2md(file = "twopart.Rmd")
rmd2md(file = "twopart.Rmd")
setwd("C:/Users/Devin/Dropbox/Projects/dincerti.github.io")
/matrix
?matrix
p1 <- c(.03, .4462, .1649, .3589)
p1
sum(p1)
.8/100
1 - .008
p1 <- c(.992, .008 * c(.03, .4462, .1649, .3589))
p1

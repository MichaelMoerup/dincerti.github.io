rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
?read_chunj
?read_chunk
read_chunk
?readLines
read_chunk('jags/markov_cohort.txt')
read_chunk
a <- read_chunk('jags/markov_cohort.txt')
a
class(a)
rm(a)
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
# This is the R code for the R Markdown file bayesian_markov_cohort.Rmd
setwd("C:/Users/Devin/Dropbox/Projects/dincerti.github.io")
rm(list=ls())
## ---- PARAMETERS -------------------------------------------------------------
## @knitr transition_table
tt <- matrix(c(1251, 350, 116, 17,
0, 731, 512, 15,
0, 0, 1312, 437),
ncol = 4, nrow = 3, byrow = TRUE)
## @knitr relative_risk
rr.est <- .509
lrr.est <- log(.509)
lrr.upper <- log(.710)
lrr.se <- (lrr.upper - lrr.est)/qnorm(.975)
## ---- JAGS MODEL -------------------------------------------------------------
## @knitr jags_data
S <- 4
n <- apply(tt, 1, sum)
alpha <- rep(1, S)
mu.lrr <- lrr.est
tau.lrr <- 1/lrr.se^2
params <- c("rr", "p")
## @knitr run_jags
library("R2jags")
jags.data <- list("mu.lrr", "tau.lrr", "S", "n", "alpha", "tt")
jagsfit <- jags(data = jags.data, parameters.to.save = params,
model.file = "jags/markov_cohort.txt", n.chains = 3,
n.iter = 10000, thin = 1)
?jags
jagsfit <- jags(data = jags.data, parameters.to.save = params,
model.file = "jags/markov_cohort.txt", n.chains = 3,
n.iter = 10000, n.thin = 1)
jagsfit
jagsfit <- jags(data = jags.data, parameters.to.save = params,
model.file = "jags/markov_cohort.txt", n.chains = 3,
n.iter = 10000)
jagsfit
jagsfit <- jags(data = jags.data, parameters.to.save = params,
model.file = "jags/markov_cohort.txt", n.chains = 3,
n.iter = 1000)
jagsfit
jagsfit <- jags(data = jags.data, parameters.to.save = params,
model.file = "jags/markov_cohort.txt", n.chains = 3,
n.iter = 10000)
jagsfit
jagsfit <- jags(data = jags.data, parameters.to.save = params,
model.file = "jags/markov_cohort.txt", n.chains = 3,
n.iter = 10000, n.thin = 5)
jagsfit
rmd2md(file = "bayesian_markov_cohort.Rmd")
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site, root.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
sa
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
?rdirichlet
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
330/20
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
?rlnorm
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "bayesian_markov_cohort.Rmd")
rmd2md(file = "markov_cohort.Rmd")
# This is the R code for the R Markdown file diabetes_highcost.Rmd
setwd("C:/Users/Devin/Dropbox/Projects/dincerti.github.io")
## ---- DATA -------------------------------------------------------------------
## @knitr data
library("data.table")
meps <- fread("data/mepsdiab.csv")
summary(meps$totexp)
## @knitr lorenz_curve
library("ineq")
library("ggplot2")
theme_set(theme_bw())
lorenz <- Lc(meps$totexp)
lorenz <- data.table(p = lorenz$p, L = lorenz$L)
frac <- c(seq(.3, .9, .1), .95)
quants <-  data.table(quant = quantile(lorenz$L, probs = frac),
frac)
ggplot(lorenz, aes(x = p, y = L)) + geom_line() +
geom_abline() + coord_cartesian(xlim = c(0, 1), ylim = c(0, 1)) +
xlab("Fraction of individuals ordered by expenditures") +
ylab("Cumulative share of expenditures") + theme(legend.title=element_blank()) +
scale_x_continuous(breaks = seq(0, 1, by = .1))  +
scale_y_continuous(breaks = seq(0, 1, by = .1))  +
theme(legend.position = "bottom") +
geom_text(data = quants, aes(x = frac - .02, y = quant + .02,
label = round(quant, 2), size = 8),
show_guide  = F)
## ---- TRAINING AND TEST DATA -------------------------------------------------
## @knitr variables
ccsnames <- names(meps)[grep("^ccs\\d\\d\\d", names(meps))]
ds <- c("dsdiet", "dsmed", "dsinsu", "dseypr", "dskidn")
xvars <- c("l_topexp", "l_totexp", "age", "srh", ds, ccsnames)
meps <- meps[, c("dupersid", "panel", "year", "topexp", "totexp",
xvars), with = FALSE]
## @knitr datasets
train <- meps[panel <= 15]
train <- train[complete.cases(train)]
test <- meps[panel > 15]
test <- test[complete.cases(test)]
## ---- LOGISTIC REGRESSION ----------------------------------------------------
## @knitr logistic_regression
Fm <- function(y, x){
return(as.formula(paste(y, "~", paste(xvars, collapse = "+"))))
}
logistic <- glm(Fm("topexp", xvars), family = binomial, train)
p.logistic <- predict.glm(logistic, test, type = "response")
## ---- REGULARIZED LOGISTIC REGRESSION ----------------------------------------
## @knitr logistic_ridge_regression
library("glmnet")
x.train <- model.matrix(Fm("topexp", xvars), train)[, -1]
y.train <- train$topexp
x.test <- model.matrix(Fm("topexp", xvars), test)[, -1]
y.test <- test$topexp
cv.ridge <- cv.glmnet(x.train, y.train, family = "binomial", alpha = 0)
p.ridge <- predict(cv.ridge, x.test, s = "lambda.min", type = "response")
## ---- RANDOM FORESTS ---------------------------------------------------------
## @knitr rf
library("randomForest")
set.seed(101)
train$srh <- as.numeric(train$srh)
x.train <- model.matrix(Fm("topexp", xvars), train)[, -1]
y.train <- as.factor(y.train)
rf <- randomForest(x = x.train, y = y.train, ntree = 501,
importance = TRUE, do.trace= FALSE)
test$srh <- as.numeric(test$srh)
p.rf <- predict(rf, test, type = "prob")
## ---- CLASSIFIER PERFORMANCE -------------------------------------------------
## @knitr brier
Brier <- function(p, y) mean((p - y)^2)
c(Brier(p.logistic, y.test), Brier(p.ridge, y.test),
Brier(p.rf[, 2], y.test))
## @knitr roc
library("ROCR")
# predictions
p.mat <- cbind(p1 = p.logistic, p2 = p.ridge[, 1], p3 = p.rf[, 2])
labels.mat <- matrix(y.test, nrow = length(y.test), ncol = ncol(preds))
pred <- prediction(p.mat, labels.mat)
# roc curve
perf <- performance(pred, "tpr", "fpr")
roc.dat <- data.frame(fpr = do.call("c", perf@x.values),
tpr = do.call("c", perf@y.values))
len <- do.call("c", lapply(perf@x.values, length))
roc.dat$lab <- rep(c("Logistic regression", "Logistic ridge regression",
"Random forest"), times = len)
ggplot(roc.dat, aes(x = fpr, y = tpr, col = lab)) + geom_line() +
xlab("False positive rate") +
ylab("True positive rate") + theme(legend.title=element_blank()) +
theme(legend.position = "bottom")
## @knitr auc
auc <- as.numeric(performance(pred, "auc")@y.values)
print(auc)
## @knitr ppv
ppv.dat <- data.frame(pred = p.ridge[, 1], y = y.test, exp = test$totexp)
ppv.dat$ecdf.p <- ecdf(ppv.dat$pred)(ppv.dat$pred)
pctile <- seq(.7, 1, .01)
tp <- rep(NA, length(pctile))
for (i in 1:length(tp)){
yhat <-  1 * (ppv.dat$ecdf.p > pctile[i])
tp[i] <- mean(ppv.dat$y[which(yhat == 1)])
}
ggplot(data.frame(x = pctile, y = tp), aes(x = x, y = y)) + geom_line() +
xlab("Percentile cutoff") + ylab("Positive predicted value") +
geom_vline(x = 0.9, lty = "dotted", col = "red")
## @knitr spending_ratio
fsaf <- sum(ppv.dat$exp[ppv.dat$ecdf.p >= .9])/sum(ppv.dat$exp[ppv.dat$y == 1])
print(fsaf)
head(p.ma)
head(p.mat)
p.mat <- cbind(p1 = p.logistic, p2 = p.ridge[, 1], p3 = p.rf[, 2])
labels.mat <- matrix(y.test, nrow = length(y.test), ncol = ncol(p.mat))
pred <- prediction(p.mat, labels.mat)
head(pred)
perf <- performance(pred, "tpr", "fpr")
roc.dat <- data.frame(fpr = do.call("c", perf@x.values),
tpr = do.call("c", perf@y.values))
len <- do.call("c", lapply(perf@x.values, length))
roc.dat$lab <- rep(c("Logistic regression", "Logistic ridge regression",
"Random forest"), times = len)
ggplot(roc.dat, aes(x = fpr, y = tpr, col = lab)) + geom_line() +
xlab("False positive rate") +
ylab("True positive rate") + theme(legend.title=element_blank()) +
theme(legend.position = "bottom")
pred
## @knitr auc
auc <- as.numeric(performance(pred, "auc")@y.values)
print(auc)
## @knitr ppv
ppv.dat <- data.frame(pred = p.ridge[, 1], y = y.test, exp = test$totexp)
ppv.dat$ecdf.p <- ecdf(ppv.dat$pred)(ppv.dat$pred)
pctile <- seq(.7, 1, .01)
tp <- rep(NA, length(pctile))
for (i in 1:length(tp)){
yhat <-  1 * (ppv.dat$ecdf.p > pctile[i])
tp[i] <- mean(ppv.dat$y[which(yhat == 1)])
}
ggplot(data.frame(x = pctile, y = tp), aes(x = x, y = y)) + geom_line() +
xlab("Percentile cutoff") + ylab("Positive predicted value") +
geom_vline(x = 0.9, lty = "dotted", col = "red")
## @knitr spending_ratio
fsaf <- sum(ppv.dat$exp[ppv.dat$ecdf.p >= .9])/sum(ppv.dat$exp[ppv.dat$y == 1])
print(fsaf)
rm(list = ls())
# globals
path.site <- "C:/Users/Devin/Dropbox/Projects/dincerti.github.io"
# convert r markdown to markdown
rmd2md <- function(path_site = path.site,
file, dir_rmd = "_rmd", dir_figs = "figs/",
out_ext='.md', in_ext='.rmd',
recursive = FALSE) {
require(knitr)
content <- readLines(file.path(path_site, dir_rmd, file))
outfile <- file.path(path_site, paste0(substr(file, 1, (nchar(file)-(nchar(in_ext)))), out_ext))
render_jekyll(highlight = "pygments")
opts_knit$set(out.format='markdown')
opts_knit$set(base.url = "/", base.dir = path_site, root.dir = path_site)
opts_chunk$set(fig.path = dir_figs, fig.width = 8, fig.height = 5, fig.align='center')
knit(text = content, output = outfile)
}
# list of files
files <- list.files(path = file.path(path.site, "_rmd"), pattern = ".rmd",
ignore.case = TRUE, recursive = FALSE)
rmd2md(file = "diabetes_highcost.Rmd")
rmd2md(file = "diabetes_highcost.Rmd")
exp(1)
exp(1.1)
exp(1.3)
x <- 7428.73
round(x, 0)
prettyNum(round(exp.pers[wave == 4 & Quartile == 4, mean], 0), big.mark=",", scientific = F)
prettyNum(round(x, 0), big.mark=",", scientific = F)
formatC(x, format = "f", digits = 2)
.1/.13
(27/267864)/(69/532104)
rct <- data.frame()
rct
rct$name <- c("New York", "Malamo I", "Kopparberg", "Ostergötland",
"Canada I", "Canada II", "Stockholm", "Göteborg", "UK age trial")
rct <- data.frame(name = c("New York", "Malamo I", "Kopparberg", "Ostergötland",
"Canada I", "Canada II", "Stockholm", "Göteborg", "UK age trial"))
rct
rct <- data.frame(name = c("New York", "Malamo I", "Kopparberg", "Ostergötland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct
## @knitr rcts
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergötland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$n1
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergötland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct$n0 <- c(31000, 20783, 18582, 37403, 25216, 19694, 19943, 29961, 106956)
rct
rct$r <- (y1/n1)/(y0/n0)
rct$r <- (rct$y1/rct$n1)/(rct$y0/rct$n0)
rct
## @knitr rcts
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergotland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct$n0 <- c(31000, 20783, 18582, 37403, 25216, 19694, 19943, 29961, 106956)
rct$r <- (rct$y1/rct$n1)/(rct$y0/rct$n0)
rct
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergotland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct$n0 <- c(31000, 20783, 18582, 37403, 25216, 19694, 19943, 29961, 106956)
rct$rr <- (rct$y1/rct$n1)/(rct$y0/rct$n0)
rct
rct$se <- sqrt((1 - rct$p1)/(rct$p1 * rct$n1) + (1 - rct$p0)/(rct$p0 * rct$n0))
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergotland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct$n0 <- c(31000, 20783, 18582, 37403, 25216, 19694, 19943, 29961, 106956)
rct$p1 <- rct$y1/rct$n1
rct$p0 <- rct$y0/rct$n0
rct$rr <- rct$p1/rct$p0
rct$se <- sqrt((1 - rct$p1)/(rct$p1 * rct$n1) + (1 - rct$p0)/(rct$p0 * rct$n0))
rct
log(0.8320611) + 1.96 * 0.0913205
exp(log(0.8320611) + 1.96 * 0.0913205)
exp(log(0.8320611) - 1.96 * 0.0913205)
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergotland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct$n0 <- c(31000, 20783, 18582, 37403, 25216, 19694, 19943, 29961, 106956)
rct$p1 <- rct$y1/rct$n1
rct$p0 <- rct$y0/rct$n0
rct$lrr <- log(rct$p1/rct$p0)
rct$lse <- sqrt((1 - rct$p1)/(rct$p1 * rct$n1) + (1 - rct$p0)/(rct$p0 * rct$n0))
head(rct)
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergotland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct$n0 <- c(31000, 20783, 18582, 37403, 25216, 19694, 19943, 29961, 106956)
rct$p1 <- rct$y1/rct$n1
rct$p0 <- rct$y0/rct$n0
rct$rr <- log(rct$p1/rct$p0)
rct$lrr.se <- sqrt((1 - rct$p1)/(rct$p1 * rct$n1) + (1 - rct$p0)/(rct$p0 * rct$n0))
rct
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergotland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct$n0 <- c(31000, 20783, 18582, 37403, 25216, 19694, 19943, 29961, 106956)
rct$p1 <- rct$y1/rct$n1
rct$p0 <- rct$y0/rct$n0
rct$rr <- rct$p1/rct$p0
rct$lrr <- log(rct$rr)
rct
rct$lrr.se <- sqrt((1 - rct$p1)/(rct$p1 * rct$n1) + (1 - rct$p0)/(rct$p0 * rct$n0))
rct
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergotland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct$n0 <- c(31000, 20783, 18582, 37403, 25216, 19694, 19943, 29961, 106956)
rct$p1 <- rct$y1/rct$n1
rct$p0 <- rct$y0/rct$n0
rct$rr <- rct$p1/rct$p0
rct$lrr <- log(rct$rr)
rct$lse <- sqrt((1 - rct$p1)/(rct$p1 * rct$n1) + (1 - rct$p0)/(rct$p0 * rct$n0))
rct
# This is the R code for the R Markdown file bayesian_meta_analysis.Rmd
setwd("C:/Users/Devin/Dropbox/Projects/dincerti.github.io")
## ---- DATA -------------------------------------------------------------------
## @knitr rcts
rct <- data.frame(study = c("New York", "Malamo I", "Kopparberg", "Ostergotland",
"Canada I", "Canada II", "Stockholm", "Goteborg", "UK age trial"))
rct$year <- c(1963, 1976, 1977, 1978, 1980, 1980, 1981, 1982, 1991)
rct$y1 <- c(218, 87, 126, 135, 105, 107, 66, 88, 105)
rct$n1 <- c(31000, 20695, 38589, 38491, 25214, 19711, 40318, 21650, 53884)
rct$y0 <- c(262, 108, 104, 173, 108, 105, 45, 162, 251)
rct$n0 <- c(31000, 20783, 18582, 37403, 25216, 19694, 19943, 29961, 106956)
rct$p1 <- rct$y1/rct$n1
rct$p0 <- rct$y0/rct$n0
rct$rr <- rct$p1/rct$p0
rct$lrr <- log(rct$rr)
rct$lse <- sqrt((1 - rct$p1)/(rct$p1 * rct$n1) + (1 - rct$p0)/(rct$p0 * rct$n0))
rct$lower <- exp(rct$lrr - qnorm(.975) * rct$lse)
rct$upper <- exp(rct$lrr + qnorm(.975) * rct$lse)
rct
install.packages("RStan")
install.packages("rstan")
library("rstan")
rct
nrow(rct)
?stan
rct
stan.dat <- list(J = nrow(rct), y = rct$lrr, sigma = rct$lse)
## @knitr stan_fit
fit <- stan(file = "stan/bayesian_meta_analysis.stan",
data = stan.dat,
iter = 1000, chains = 4)
stan.dat
getwd()
install.packages('BH')
fit <- stan(file = "stan/bayesian_meta_analysis.stan",
data = stan.dat, iter = 1000, chains = 4)
library("rstan")
library("BH")
fit <- stan(file = "stan/bayesian_meta_analysis.stan",
data = stan.dat, iter = 1000, chains = 4)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
fit <- stan(file = 'stan/8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
fit <- stan(file = 'stan/bayesian_meta_analysis.stan', data = schools_dat,
iter = 1000, chains = 4)
schools_dat
## @knitr stan_fit
fit <- stan(file = "stan/bayesian_meta_analysis.stan",
data = stan.dat, iter = 1000, chains = 4)
